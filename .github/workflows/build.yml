name: Build/Push Image

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      push:
        description: 'Push image [true|false]'
        required: false
        default: 'false'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      red-version: ${{ steps.red-version.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Red version
      id: red-version
      run: |
        RED_VERSION=$(cat ./requirements.txt | grep 'Red-DiscordBot' | sed 's/Red-DiscordBot == //g')
        echo "version=$RED_VERSION" >> $GITHUB_OUTPUT

  build:
    name: Build ${{ matrix.base }} image
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base: debian
            tag: latest
            extra_tag: ''
          - base: alpine
            tag: alpine
            extra_tag: -alpine
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build image
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile-${{ matrix.base }}
        push: false
        build-args: |
          RED_VERSION=${{ needs.setup.outputs.red-version }}
        tags: |
          rhomelab/red-discordbot:${{ matrix.tag }}
          rhomelab/red-discordbot:${{ needs.setup.outputs.red-version }}${{ matrix.extra_tag }}
          ghcr.io/rhomelab/red-discordbot:${{ matrix.tag }}
          ghcr.io/rhomelab/red-discordbot:${{ needs.setup.outputs.red-version }}${{ matrix.extra_tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: type=docker,dest=/tmp/${{ matrix.base }}.tar

    - name: Upload image artefact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v3
      with:
        name: image-${{ matrix.base }}
        path: /tmp/${{ matrix.base }}.tar

  push:
    name: Push ${{ matrix.base }} image
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.inputs.push == 'true'
    strategy:
      matrix:
        include:
          - base: debian
            tag: latest
            extra_tag: ''
          - base: alpine
            tag: alpine
            extra_tag: -alpine
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Download image artefact
      uses: actions/download-artifact@v3
      with:
        name: image-${{ matrix.base }}
        path: /tmp/

    - name: Load and push image
      run: |
        docker load --input /tmp/${{ matrix.base }}.tar
        docker image push --all-tags rhomelab/red-discordbot
        docker image push --all-tags ghcr.io/rhomelab/red-discordbot
