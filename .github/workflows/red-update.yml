name: Check/update Red-DiscordBot

on:
  schedule:
    - cron:  '0 0,12 * * *'
  workflow_dispatch:

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Parse current Red version
        id: red-current
        run: |
          RED_CURRENT=$(cat ./requirements.txt | grep 'Red-DiscordBot' | sed 's/Red-DiscordBot == //g')
          echo "version=$RED_CURRENT" >> $GITHUB_OUTPUT

      - name: Fetch latest Red release
        id: red-latest
        uses: oprypin/find-latest-tag@v1
        with:
          repository: Cog-Creators/Red-DiscordBot
          releases-only: true

      - name: Compare current version to latest release tag
        id: version-check
        run: |
          if [ "$(printf '%s\n' "${{ steps.red-latest.outputs.tag }}" "${{ steps.red-current.outputs.version }}" | sort -V | head -n1)" = "${{ steps.red-latest.outputs.tag }}" ]; then
            echo "Current version (${{ steps.red-current.outputs.version }}) greater than or equal to latest release (${{ steps.red-latest.outputs.tag }}). No action will be taken."
            echo "update=false" >> $GITHUB_OUTPUT
          else
            echo "Current version (${{ steps.red-current.outputs.version }}) less than latest release (${{ steps.red-latest.outputs.tag }}). Update will be processed."
            echo "update=true" >> $GITHUB_OUTPUT
          fi

      - name: Patch files referencing version
        if: steps.version-check.outputs.update == 'true'
        run: |
          sed -i -E "s/^(Red-DiscordBot ==).*$/\1 ${{ steps.red-latest.outputs.tag }}/g" requirements.txt
          sed -i -E "s/^(LABEL org\.opencontainers\.image\.version=\").*(\")$/\1${{ steps.red-latest.outputs.tag }}\2/g" Dockerfile-*

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "feat(requirements): update Red-DiscordBot to ${{ steps.red-latest.outputs.tag }}"
          committer: github-actions <41898282+github-actions[bot]@users.noreply.github.com>
          author: github-actions <41898282+github-actions[bot]@users.noreply.github.com>
          base: main
          branch: feat/auto-red-update
          delete-branch: true
          title: "Red-DiscordBot ${{ steps.red-latest.outputs.tag }}"
          body: |
            Update is available for Red-DiscordBot.

            Current version: ${{ steps.red-current.outputs.version }}
            Latest version: ${{ steps.red-latest.outputs.tag }}

            [${{ steps.red-latest.outputs.tag }} release notes.](https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/${{ steps.red-latest.outputs.tag }})
          reviewers: tigattack
          labels: |
            red-update
            automated

      - name: Pull request details
        run: |
          echo "${{ steps.create-pr.outputs.pull-request-operation }} PR #${{ steps.create-pr.outputs.pull-request-number }} - ${{ steps.create-pr.outputs.pull-request-url }}"

# Scheduled GitHub Actions workflows are disabled after 60 days of repository inactivity.
# The steps below are a hacky workaround to eliminate that problem.
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: actions-keepalive

      - name: Run keepalive
        uses: gautamkrishnar/keepalive-workflow@v1
        with:
          commit_message: |
            chore: Actions keepalive

            Automated commit by Keepalive Workflow to keep repo and workflows active.
          committer_username: github-actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
