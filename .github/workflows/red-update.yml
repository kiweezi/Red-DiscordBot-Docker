name: Check for Red releases

on:
  schedule:
    - cron:  '0 0,12 * * *'
  workflow_dispatch:

jobs:
  get-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_REPO_TOKEN }}

      - name: Parse current Red version
        run: echo "RED_CURRENT=$(cat ./requirements.txt | grep 'Red-DiscordBot' | sed 's/Red-DiscordBot == //g')" >> $GITHUB_ENV

      - name: Fetch latest Red version
        run: |
          RED_LATEST=$(
            curl -sL https://api.github.com/repos/Cog-Creators/Red-DiscordBot/releases/latest | \
            jq -r ".tag_name"
          )
          echo "RED_LATEST=$RED_LATEST" >> $GITHUB_ENV

      - name: Patch requirements.txt if update available
        id: version-check
        run: |
          if [ "$(printf '%s\n' "${{ env.RED_LATEST }}" "${{ env.RED_VERSION }}" | sort -V | head -n1)" = "${{ env.RED_LATEST }}" ]; then
            echo ::set-output name=update::false
          else
            sed -i -E "s/^(Red-DiscordBot ==).*$/\1 ${{ env.RED_LATEST }}/g" requirements.txt
            echo ::set-output name=update::true
          fi

      - name: Commit latest updated requirements
        if: steps.version-check.outputs.update == 'true'
        run: |
          git config --global user.name 'CI'
          git config --global user.email '10629864+tigattack@users.noreply.github.com'
          git commit -am "feat(requirements): update Red-DiscordBot to ${RED_LATEST}"
          git push
